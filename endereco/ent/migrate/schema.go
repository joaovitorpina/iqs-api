// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CepsColumns holds the columns for the "ceps" table.
	CepsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "logradouro", Type: field.TypeString},
		{Name: "bairro", Type: field.TypeString},
		{Name: "cidade_ceps", Type: field.TypeInt, Nullable: true},
	}
	// CepsTable holds the schema information for the "ceps" table.
	CepsTable = &schema.Table{
		Name:       "ceps",
		Columns:    CepsColumns,
		PrimaryKey: []*schema.Column{CepsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ceps_cidades_ceps",
				Columns:    []*schema.Column{CepsColumns[3]},
				RefColumns: []*schema.Column{CidadesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CidadesColumns holds the columns for the "cidades" table.
	CidadesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "nome", Type: field.TypeString},
		{Name: "estado_cidades", Type: field.TypeInt, Nullable: true},
	}
	// CidadesTable holds the schema information for the "cidades" table.
	CidadesTable = &schema.Table{
		Name:       "cidades",
		Columns:    CidadesColumns,
		PrimaryKey: []*schema.Column{CidadesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cidades_estados_cidades",
				Columns:    []*schema.Column{CidadesColumns[2]},
				RefColumns: []*schema.Column{EstadosColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EnderecosColumns holds the columns for the "enderecos" table.
	EnderecosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "numero", Type: field.TypeString},
		{Name: "cep_enderecos", Type: field.TypeInt32, Nullable: true},
	}
	// EnderecosTable holds the schema information for the "enderecos" table.
	EnderecosTable = &schema.Table{
		Name:       "enderecos",
		Columns:    EnderecosColumns,
		PrimaryKey: []*schema.Column{EnderecosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enderecos_ceps_enderecos",
				Columns:    []*schema.Column{EnderecosColumns[2]},
				RefColumns: []*schema.Column{CepsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EstadosColumns holds the columns for the "estados" table.
	EstadosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "nome", Type: field.TypeString},
	}
	// EstadosTable holds the schema information for the "estados" table.
	EstadosTable = &schema.Table{
		Name:       "estados",
		Columns:    EstadosColumns,
		PrimaryKey: []*schema.Column{EstadosColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CepsTable,
		CidadesTable,
		EnderecosTable,
		EstadosTable,
	}
)

func init() {
	CepsTable.ForeignKeys[0].RefTable = CidadesTable
	CidadesTable.ForeignKeys[0].RefTable = EstadosTable
	EnderecosTable.ForeignKeys[0].RefTable = CepsTable
}
