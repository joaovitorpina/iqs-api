// Code generated by entc, DO NOT EDIT.

package endereco

const (
	// Label holds the string label denoting the endereco-controller type in the database.
	Label = "endereco-controller"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNumero holds the string denoting the numero field in the database.
	FieldNumero = "numero"
	// EdgeCep holds the string denoting the cep edge name in mutations.
	EdgeCep = "cep"
	// Table holds the table name of the endereco-controller in the database.
	Table = "enderecos"
	// CepTable is the table that holds the cep relation/edge.
	CepTable = "enderecos"
	// CepInverseTable is the table name for the Cep entity.
	// It exists in this package in order to avoid circular dependency with the "cep" package.
	CepInverseTable = "ceps"
	// CepColumn is the table column denoting the cep relation/edge.
	CepColumn = "cep_enderecos"
)

// Columns holds all SQL columns for endereco-controller fields.
var Columns = []string{
	FieldID,
	FieldNumero,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "enderecos"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"cep_enderecos",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// NumeroValidator is a validator for the "numero" field. It is called by the builders before save.
	NumeroValidator func(string) error
)
