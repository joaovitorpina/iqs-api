// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "João Vitor Goncalves Pina",
            "email": "joaovitorpina@icloud.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/enderecos/{id}": {
            "get": {
                "description": "Retorna o endereco pelo id enviado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endereco"
                ],
                "summary": "Busca um endereco por id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id do Endereco",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endereco",
                        "schema": {
                            "$ref": "#/definitions/dtos.BuscarEnderecoResponse"
                        }
                    }
                }
            }
        },
        "/profissionais": {
            "get": {
                "description": "Realiza a listagem com paginacão dos profissionais a partir dos dados enviados para busca",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profissional"
                ],
                "summary": "Listagem de profissionais pela busca",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "especialidadeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limite",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "nome",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pagina",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tipoProfissionalId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "unidadeId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Listagem profissionais",
                        "schema": {
                            "$ref": "#/definitions/dtos.BuscarListagemProfissionaisResponse"
                        }
                    }
                }
            }
        },
        "/profissionais/{id}": {
            "get": {
                "description": "Retorna todos os detalhes do profissional pelo id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profissional"
                ],
                "summary": "Busca todas as informacões do profissional",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id do profissional",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Listagem profissionais",
                        "schema": {
                            "$ref": "#/definitions/dtos.BuscarListagemProfissionaisResponse"
                        }
                    }
                }
            }
        },
        "/profissionais/{id}/convenios": {
            "get": {
                "description": "Buscar os convenios do profisional por id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Convenio"
                ],
                "summary": "Busca os convenios do profissional",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id do profissional",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Convenios",
                        "schema": {
                            "$ref": "#/definitions/dtos.BuscarConveniosResponse"
                        }
                    }
                }
            }
        },
        "/profissionais/{id}/midias/fotos": {
            "get": {
                "description": "Buscar as fotos do profisional por id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Midias"
                ],
                "summary": "Busca as fotos do profissional",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id do profissional",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fotos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.BuscarFotosResponse"
                            }
                        }
                    }
                }
            }
        },
        "/profissionais/{id}/midias/podcasts": {
            "get": {
                "description": "Buscar os podcasts do profisional por id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Midias"
                ],
                "summary": "Busca os podcasts do profissional",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id do profissional",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Podcasts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.BuscarPodcastsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/profissionais/{id}/midias/videos": {
            "get": {
                "description": "Buscar os videos do profisional por id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Midias"
                ],
                "summary": "Busca os videos do profissional",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id do profissional",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Videos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.BuscarVideosResponse"
                            }
                        }
                    }
                }
            }
        },
        "/profissionais/{id}/tratamentos": {
            "get": {
                "description": "Buscar os tratamentos do profisional por id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tratamentos"
                ],
                "summary": "Busca os tratamentos do profissional",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id do profissional",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tratamentos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/profissionais/{id}/whatsapps": {
            "get": {
                "description": "Buscar os WhatsApp` + "`" + `s do profisional por id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WhatsApp"
                ],
                "summary": "Busca os WhatsApp` + "`" + `s do profissional",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id do profissional",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "WhatsApp` + "`" + `s",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.BuscarWhatsappsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/unidades": {
            "get": {
                "description": "Retorna uma listagem com todas as unidades",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unidade"
                ],
                "summary": "Lista todas as unidades",
                "responses": {
                    "200": {
                        "description": "Unidades",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.BuscarUnidadesResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.BuscarConveniosResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dtos.BuscarEnderecoResponse": {
            "type": "object",
            "properties": {
                "bairro": {
                    "type": "string"
                },
                "cep": {
                    "type": "integer"
                },
                "cidade": {
                    "type": "string"
                },
                "estado": {
                    "type": "string"
                },
                "logradouro": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                }
            }
        },
        "dtos.BuscarFotosResponse": {
            "type": "object",
            "properties": {
                "titulo": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dtos.BuscarListagemProfissionaisResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ProfissionalReduzido"
                    }
                },
                "pagina": {
                    "type": "integer"
                },
                "quantidade": {
                    "type": "integer"
                }
            }
        },
        "dtos.BuscarPodcastsResponse": {
            "type": "object",
            "properties": {
                "codigo": {
                    "type": "string"
                },
                "titulo": {
                    "type": "string"
                }
            }
        },
        "dtos.BuscarUnidadesResponse": {
            "type": "object",
            "properties": {
                "ativo": {
                    "type": "boolean"
                },
                "celular": {
                    "type": "integer"
                },
                "descricao": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "endereco_id": {
                    "type": "integer"
                },
                "facebook": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instagram": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "telefone": {
                    "type": "integer"
                },
                "url_amigavel": {
                    "type": "string"
                },
                "youtube": {
                    "type": "string"
                }
            }
        },
        "dtos.BuscarVideosResponse": {
            "type": "object",
            "properties": {
                "titulo": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "url_thumbnail": {
                    "type": "string"
                }
            }
        },
        "dtos.BuscarWhatsappsResponse": {
            "type": "object",
            "properties": {
                "numero": {
                    "type": "integer"
                },
                "principal": {
                    "type": "boolean"
                }
            }
        },
        "dtos.ProfissionalReduzido": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "especialidades": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "facebook": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imagem_perfil_url": {
                    "type": "string"
                },
                "instagram": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "recomendado": {
                    "type": "boolean"
                },
                "site": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                },
                "unidade_id": {
                    "type": "integer"
                },
                "url_amigavel": {
                    "type": "string"
                },
                "whatsapp": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "IQS API",
	Description: "Essa é a API para o site do Informacão que Salva e o admin.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
