// Code generated by entc, DO NOT EDIT.

package especializacao

const (
	// Label holds the string label denoting the especializacao type in the database.
	Label = "especializacao"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDescricao holds the string denoting the descricao field in the database.
	FieldDescricao = "descricao"
	// EdgeAreasaude holds the string denoting the areasaude edge name in mutations.
	EdgeAreasaude = "areasaude"
	// EdgeProfissionais holds the string denoting the profissionais edge name in mutations.
	EdgeProfissionais = "profissionais"
	// Table holds the table name of the especializacao in the database.
	Table = "especializacaos"
	// AreasaudeTable is the table that holds the areasaude relation/edge.
	AreasaudeTable = "especializacaos"
	// AreasaudeInverseTable is the table name for the AreaSaude entity.
	// It exists in this package in order to avoid circular dependency with the "areasaude" package.
	AreasaudeInverseTable = "area_saudes"
	// AreasaudeColumn is the table column denoting the areasaude relation/edge.
	AreasaudeColumn = "area_saude_especializacoes"
	// ProfissionaisTable is the table that holds the profissionais relation/edge. The primary key declared below.
	ProfissionaisTable = "especializacao_profissionais"
	// ProfissionaisInverseTable is the table name for the Profissional entity.
	// It exists in this package in order to avoid circular dependency with the "profissional" package.
	ProfissionaisInverseTable = "profissionals"
)

// Columns holds all SQL columns for especializacao fields.
var Columns = []string{
	FieldID,
	FieldDescricao,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "especializacaos"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"area_saude_especializacoes",
}

var (
	// ProfissionaisPrimaryKey and ProfissionaisColumn2 are the table columns denoting the
	// primary key for the profissionais relation (M2M).
	ProfissionaisPrimaryKey = []string{"especializacao_id", "profissional_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
